{"remainingRequest":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\医院管理系统\\HospitalManagerVue\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\医院管理系统\\HospitalManagerVue\\src\\views\\Login.vue","mtime":1753258169273},{"path":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001368000},{"path":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1689001370000},{"path":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001368000},{"path":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001370000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"login-index\" :style=\"backgroundDiv\">\n        <div class=\"mid-index\">\n            <i\n                style=\"\n                    top: 40px;\n                    font-size: 28px;\n                    left: 20px;\n                    position: absolute;\n                \"\n                class=\"iconfont icon-r-love\"\n            >\n                登录医院管理系统\n            </i>\n            <el-form\n                :model=\"loginForm\"\n                :rules=\"loginRules\"\n                ref=\"ruleForm\"\n                class=\"loginForm\"\n            >\n                <el-form-item prop=\"id\">\n                    <!--必须绑定v-model输入框才能输入字符---->\n                    <el-input \n                        v-model=\"loginForm.id\"\n                        placeholder=\"请输入账号\"\n                    >\n                        <i\n                            slot=\"prefix\"\n                            class=\"iconfont icon-r-user1\"\n                            style=\"font-size: 22px\"\n                        ></i>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input \n                        v-model=\"loginForm.password\" \n                        show-password\n                        placeholder=\"请输入密码\"\n                    >\n                        <i\n                            slot=\"prefix\"\n                            class=\"iconfont icon-r-lock\"\n                            style=\"font-size: 22px\"\n                        ></i>\n                    </el-input>\n                </el-form-item>\n                <!-- 新增验证码输入框 -->\n                <el-form-item prop=\"captcha\">  <!-- 新增 -->\n                    <el-row :gutter=\"10\">  <!-- 新增 -->\n                        <el-col :span=\"14\">  <!-- 新增 -->\n                            <el-input \n                                v-model=\"loginForm.captcha\" \n                                placeholder=\"请输入验证码\"\n                            >  <!-- 新增 -->\n                                <i\n                                    slot=\"prefix\"\n                                    class=\"iconfont icon-r-code\"\n                                    style=\"font-size: 22px\"\n                                ></i>  <!-- 新增 -->\n                            </el-input>  <!-- 新增 -->\n                        </el-col>  <!-- 新增 -->\n                        <el-col :span=\"10\">  <!-- 新增 -->\n                            <div class=\"captcha-img\">  <!-- 新增 -->\n                                <img :src=\"captchaUrl\" @click=\"refreshCaptcha\" alt=\"验证码\" />  <!-- 新增 -->\n                            </div>  <!-- 新增 -->\n                        </el-col>  <!-- 新增 -->\n                    </el-row>  <!-- 新增 -->\n                </el-form-item>  <!-- 新增 -->\n\n                <!-- 角色单选框 -->\n                <el-form-item class=\"role\">\n                    <el-radio-group v-model=\"role\" size=\"small\" @change=\"refreshCaptcha\">\n                        <el-radio label=\"患者\"></el-radio>\n                        <el-radio label=\"医生\"></el-radio>\n                        <el-radio label=\"管理员\"></el-radio>\n                    </el-radio-group>\n                </el-form-item>\n\n                <el-form-item class=\"btns\">\n                    <el-button\n                        type=\"primary\"\n                        style=\"font-size: 18px\"\n                        @click=\"submitLoginForm('ruleForm')\"\n                    >\n                        <i\n                            class=\"iconfont icon-r-yes\"\n                            style=\"font-size: 20px\"\n                        ></i>\n                        登录</el-button\n                    >\n                    <el-button\n                        type=\"info\"\n                        style=\"font-size: 18px\"\n                        @click=\"registerFormVisible = true\"\n                    >\n                        <i\n                            class=\"iconfont icon-r-add\"\n                            style=\"font-size: 20px\"\n                        ></i>\n                        注册新账号</el-button\n                    >\n                </el-form-item>\n            </el-form>\n        </div>\n\n        <!-- 注册对话框 -->\n        <el-dialog title=\"用户注册\" :visible.sync=\"registerFormVisible\">\n            <el-form\n                class=\"findPassword\"\n                :model=\"registerForm\"\n                :rules=\"registerRules\"\n                ref=\"registerForm\"\n            >\n                <el-form-item label=\"账号\" label-width=\"80px\" prop=\"pId\">\n                    <el-input v-model.number=\"registerForm.pId\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"性别\" label-width=\"80px\">\n                    <el-radio v-model=\"registerForm.pGender\" label=\"男\"\n                        >男</el-radio\n                    >\n                    <el-radio v-model=\"registerForm.pGender\" label=\"女\"\n                        >女</el-radio\n                    >\n                </el-form-item>\n                <el-form-item label=\"密码\" label-width=\"80px\" prop=\"pPassword\">\n                    <el-input v-model=\"registerForm.pPassword\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"姓名\" label-width=\"80px\" prop=\"pName\">\n                    <el-input v-model=\"registerForm.pName\"></el-input>\n                </el-form-item>\n                <el-form-item\n                    label=\"出生日期\"\n                    label-width=\"80px\"\n                    prop=\"pBirthday\"\n                >\n                    <el-date-picker\n                        v-model=\"registerForm.pBirthday\"\n                        type=\"date\"\n                        placeholder=\"选择日期\"\n                        value-format=\"yyyy-MM-dd\"\n                    >\n                    </el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"手机号\" label-width=\"80px\" prop=\"pPhone\">\n                    <el-input v-model=\"registerForm.pPhone\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" label-width=\"80px\" prop=\"pEmail\">\n                    <el-input v-model=\"registerForm.pEmail\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"身份证号\" label-width=\"80px\" prop=\"pCard\">\n                    <el-input v-model=\"registerForm.pCard\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button\n                    @click=\"registerFormVisible = false\"\n                    style=\"font-size: 18px\"\n                    ><i\n                        class=\"iconfont icon-r-left\"\n                        style=\"font-size: 20px\"\n                    ></i>\n                    取 消</el-button\n                >\n                <el-button\n                    type=\"primary\"\n                    @click=\"registerClick('registerForm')\"\n                    style=\"font-size: 18px\"\n                    ><i class=\"iconfont icon-r-yes\" style=\"font-size: 20px\"></i>\n                    确 定</el-button\n                >\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nimport { setToken } from \"@/utils/storage.js\";\nimport { toLoad } from \"@/utils/initialize.js\";\n\nexport default {\n    name: \"Login\",\n    data() {\n        var validateMoblie = (rule, value, callback) => {\n            if (value === undefined) {\n                callback(new Error(\"请输入手机号\"));\n            } else {\n                let reg =\n                    /^1(3[0-9]|4[5,7]|5[0,1,2,3,5,6,7,8,9]|6[2,5,6,7]|7[0,1,7,8]|8[0-9]|9[1,8,9])\\d{8}$/;\n                if (!reg.test(value)) {\n                    callback(new Error(\"请输入合法的手机号\"));\n                }\n                callback();\n            }\n        };\n        var validateCard = (rule, value, callback) => {\n            if (value === undefined) {\n                callback(new Error(\"请输入身份证号\"));\n            } else {\n                let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n                if (!reg.test(value)) {\n                    callback(new Error(\"请输入合法的身份证号码\"));\n                }\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请输入密码\"));\n            } else {\n                if (this.findForm.checkPassword !== \"\") {\n                    this.$refs.findForm.validateField(\"checkPassword\");\n                }\n                callback();\n            }\n        };\n        var validatePass2 = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请再次输入密码\"));\n            } else if (value !== this.findForm.newPassword) {\n                callback(new Error(\"两次输入密码不一致!\"));\n            } else {\n                callback();\n            }\n        };\n        return {\n            //背景图片\n            backgroundDiv: {\n                backgroundImage:\n                    \"url(\" + require(\"../assets/doctor.jpeg\") + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"100% 100%\",\n            },\n            loginForm: {\n                id: \"\",\n                password: \"\",\n                captcha: \"\",  // 新增验证码字段\n            },\n            loginRules: {\n                id: [\n                    {\n                        required: true,\n                        message: \"请输入账号编号\",\n                        trigger: \"blur\",\n                    },\n                    {\n                        min: 3,\n                        max: 50,\n                        message: \"长度在 3到 50 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                password: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                ],\n                // 新增验证码验证规则\n                captcha: [  // 新增\n                    { required: true, message: \"请输入验证码\", trigger: \"blur\" },  // 新增\n                    { validator: (rule, value, callback) => {\n                        if (value && value.length !== 4) {\n                            // 长度不符时刷新验证码\n                            this.refreshCaptcha();\n                            this.loginForm.captcha = \"\";\n                            callback(new Error(\"验证码长度为4位，已自动刷新\"));\n                        } else {\n                            callback();\n                        }\n                    }, trigger: \"blur\" }  // 新增\n                ],  // 新增\n            },\n            role: \"患者\",\n            findRole: \"患者\",\n            //找回密码\n            findFormVisible: false,\n            findForm: {\n                code: \"\",\n                newPassword: \"\",\n                checkPassword: \"\",\n                pEmail: \"\",\n            },\n\n            findRules: {\n                pEmail: [\n                    {\n                        required: true,\n                        message: \"请输入邮箱地址\",\n                        trigger: \"blur\",\n                    },\n                    {\n                        type: \"email\",\n                        message: \"请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"],\n                    },\n                ],\n                code: [\n                    {\n                        required: true,\n                        message: \"请输入验证码\",\n                        trigger: \"blur\",\n                    },\n                ],\n                newPassword: [{ validator: validatePass, trigger: \"blur\" }],\n                checkPassword: [{ validator: validatePass2, trigger: \"blur\" }],\n            },\n            totalTime: 60,\n            content: \"发送验证码\",\n            canClick: true,\n            //注册\n            registerFormVisible: false,\n            registerForm: {\n                pGender: \"男\",\n            },\n            registerRules: {\n                pId: [\n                    { required: true, message: \"请输入账号\", trigger: \"blur\" },\n                    {\n                        type: \"number\",\n                        message: \"账号必须数字类型\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pPassword: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                    {\n                        min: 4,\n                        max: 50,\n                        message: \"长度在 4到 50 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pName: [\n                    { required: true, message: \"请输入姓名\", trigger: \"blur\" },\n                    {\n                        min: 2,\n                        max: 8,\n                        message: \"长度在 2到 8 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pEmail: [\n                    { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\n                    {\n                        type: \"email\",\n                        message: \"请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"],\n                    },\n                ],\n                pPhone: [{ validator: validateMoblie }],\n                pCard: [{ validator: validateCard }],\n                pBirthday: [\n                    {\n                        required: true,\n                        message: \"选择出生日期\",\n                        trigger: \"blur\",\n                    },\n                ],\n            },\n            // 新增验证码相关属性\n            captchaUrl: \"\",  // 新增：验证码图片URL\n            rolePaths: {     //每个角色有权访问的路径\n            '管理员': ['/admin', '/adminLayout', '/doctorList', '/patientList', '/orderList', '/drugList', '/checkList', '/bedList', '/arrangeIndex', '/dataExpore'],\n            '医生': ['/doctor', '/doctorLayout', '/orderToday', '/dealOrder', '/dealOrderAgain', '/doctorOrder', '/inBed', '/doctorCard'],\n            '患者': ['/patient', '/patientLayout', '/orderOperate', '/sectionMessage', '/myOrder', '/myBed', '/patientCard']\n            }\n        };\n    },\n    mounted() {\n        toLoad();\n        this.refreshCaptcha();  // 页面初始化时调用，自动获取验证码\n    },\n    methods: {\n        // 新增：刷新验证码\n        refreshCaptcha() {  // 新增\n            // 根据角色获取对应验证码接口\n            let url = \"\";  // 新增\n            if (this.role === \"管理员\") {  // 新增\n                url = \"admin/getCaptcha\";  // 新增\n            } else if (this.role === \"医生\") {  // 新增\n                url = \"doctor/getCaptcha\";  // 新增\n            } else {  // 新增\n                url = \"patient/getCaptcha\";  // 新增\n            }  // 新增\n            // 添加随机数防止缓存\n            this.captchaUrl = request.defaults.baseURL + \"/\" + url + \"?t=\" + Math.random();  // 新增\n        },  // 新增\n        //点击注册确认按钮\n        registerClick(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    request\n                        .get(\"patient/addPatient\", {\n                            params: {\n                                pId: this.registerForm.pId,\n                                pName: this.registerForm.pName,\n                                pPassword: this.registerForm.pPassword,\n                                pGender: this.registerForm.pGender,\n                                pEmail: this.registerForm.pEmail,\n                                pPhone: this.registerForm.pPhone,\n                                pCard: this.registerForm.pCard,\n                                pBirthday: this.registerForm.pBirthday,\n                            },\n                        })\n                        .then((res) => {\n                            if (res.data.status !== 200)\n                                return this.$message.error(\n                                    \"账号或邮箱已被占用！\"\n                                );\n                            this.registerFormVisible = false;\n                            this.$message.success(\"注册成功！\");\n                            console.log(res);\n                        });\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        // 点击找回密码确认按钮\n        findPassword(findForm) {\n            this.$refs[findForm].validate((valid) => {\n                if (valid) {\n                    //如果是选中患者\n                    if (this.findRole === \"患者\") {\n                        request\n                            .get(\"patient/findPassword\", {\n                                params: {\n                                    pEmail: this.findForm.pEmail,\n                                    pPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                    //如果是选中管理员\n                    if (this.findRole === \"管理员\") {\n                        request\n                            .get(\"admin/findPassword\", {\n                                params: {\n                                    aEmail: this.findForm.pEmail,\n                                    aPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                    //如果是选中患者\n                    if (this.findRole === \"医生\") {\n                        request\n                            .get(\"doctor/findPassword\", {\n                                params: {\n                                    dEmail: this.findForm.pEmail,\n                                    dPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        //点击发送验证码按钮\n        sendEmail() {\n            //倒计时\n            if (!this.canClick) return; //改动的是这两行代码\n            this.canClick = false;\n            this.content = this.totalTime + \"s后重新发送\";\n            let clock = window.setInterval(() => {\n                this.totalTime--;\n                this.content = this.totalTime + \"s后重新发送\";\n                if (this.totalTime < 0) {\n                    window.clearInterval(clock);\n                    this.content = \"重新发送验证码\";\n                    this.totalTime = 10;\n                    this.canClick = true; //这里重新开启\n                }\n            }, 1000);\n\n            //如果是选中患者\n            if (this.findRole === \"患者\") {\n                request\n                    .get(\"patient/sendEmail\", {\n                        params: {\n                            pEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n            //如果是选中管理员\n            if (this.findRole === \"管理员\") {\n                request\n                    .get(\"admin/sendEmail\", {\n                        params: {\n                            aEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n            //如果是选中医生\n            if (this.findRole === \"医生\") {\n                request\n                    .get(\"doctor/sendEmail\", {\n                        params: {\n                            dEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n        },\n        //提交表单\n        submitLoginForm(formName) {\n            if (!/^\\d+$/.test(this.loginForm.id)) {\n                this.$message.error(\"用户名有误\");\n                return;\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    if (this.role === \"管理员\") {\n                        var params = new URLSearchParams();\n                        params.append(\"aId\", this.loginForm.id);\n                        params.append(\"aPassword\", this.loginForm.password);\n                        params.append(\"captcha\", this.loginForm.captcha); // 新增：添加验证码参数\n\n                        request\n                            .post(\"admin/login\", params)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200){\n                                    this.refreshCaptcha();\n                                    return this.$message.error(res.data.msg);\n                                }\n                                setToken(res.data.data.token);\n                                const targetUrl = localStorage.getItem('targetUrl');\n                                if (targetUrl) {\n                                    // 检查目标路径是否在当前角色允许的路径中\n                                    const isAllowed = this.rolePaths[this.role].some(path => targetUrl.startsWith(path));\n                                    if (isAllowed) {\n                                        this.$router.push(targetUrl);\n                                    } else {\n                                        // 跳转到默认路径\n                                        this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                    }\n                                    localStorage.removeItem('targetUrl'); // 清除缓存的目标路径\n                                } else {\n                                    // 跳转到默认路径\n                                    this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                }\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                this.refreshCaptcha(); // 新增：异常状况下刷新验证码\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                    if (this.role === \"医生\") {\n                        var params1 = new URLSearchParams();\n                        params1.append(\"dId\", this.loginForm.id);\n                        params1.append(\"dPassword\", this.loginForm.password);\n                        params1.append(\"captcha\", this.loginForm.captcha); // 新增：添加验证码参数\n\n                        request\n                            .post(\"doctor/login\", params1)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200){\n                                    this.refreshCaptcha();\n                                    return this.$message.error(res.data.msg);   \n                                }        \n                                // 1. 登录成功，先保存token  \n                                setToken(res.data.data.token);\n\n                                // 2. 紧接着添加这段跳转校验逻辑\n                                const targetUrl = localStorage.getItem('targetUrl');\n                                if (targetUrl) {\n                                    // 检查目标路径是否在当前角色允许的路径中\n                                    const isAllowed = this.rolePaths[this.role].some(path => targetUrl.startsWith(path));\n                                    if (isAllowed) {\n                                        this.$router.push(targetUrl);\n                                    } else {\n                                        // 跳转到默认路径\n                                        this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                    }\n                                    localStorage.removeItem('targetUrl'); // 清除缓存的目标路径\n                                } else {\n                                    // 跳转到默认路径\n                                    this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                }\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                this.refreshCaptcha(); // 新增：异常情况下刷新验证码\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                    if (this.role === \"患者\") {\n                        var params2 = new URLSearchParams();\n                        params2.append(\"pId\", this.loginForm.id);\n                        params2.append(\"pPassword\", this.loginForm.password);\n                        params2.append(\"captcha\", this.loginForm.captcha); // 新增：添加验证码参数\n\n                        request\n                            .post(\"patient/login\", params2)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200){\n                                    this.refreshCaptcha();\n                                    return this.$message.error(res.data.msg);\n                                }   \n                                setToken(res.data.data.token);\n                                const targetUrl = localStorage.getItem('targetUrl');\n                                if (targetUrl) {\n                                    // 检查目标路径是否在当前角色允许的路径中\n                                    const isAllowed = this.rolePaths[this.role].some(path => targetUrl.startsWith(path));\n                                    if (isAllowed) {\n                                        this.$router.push(targetUrl);\n                                    } else {\n                                        // 跳转到默认路径\n                                        this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                    }\n                                    localStorage.removeItem('targetUrl'); // 清除缓存的目标路径\n                                } else {\n                                    // 跳转到默认路径\n                                    this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                }\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                this.refreshCaptcha(); // 新增：异常情况下刷新验证码\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n    }\n};\n</script>\n\n<style lang=\"scss\">\n// 新增验证码图片样式\n.captcha-img {  /* 新增 */\n    width: 100%;  /* 新增 */\n    height: 40px;  /* 新增 */\n    cursor: pointer;  /* 新增 */\n    overflow: hidden;  /* 新增 */\n    img {  /* 新增 */\n        width: 100%;  /* 新增 */\n        height: 100%;  /* 新增 */\n        object-fit: cover;  /* 新增 */\n    }  /* 新增 */\n}  /* 新增 */\n.codeInput {\n    width: 70%;\n    margin-right: 10px;\n}\n.findPassword {\n    margin-top: 0px;\n}\n.login-index {\n    background: #2b4b6b;\n    height: 100vh;\n    position: relative;\n}\n.mid-index {\n    opacity: 0.9;\n    width: 450px;\n    height: 390px;\n    background: white;\n    //绝对定位，相对于最左上角来说\n    position: absolute;\n    left: 70%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    overflow: hidden;\n}\n.logo-index {\n    background: white;\n    height: 130px;\n    width: 130px;\n    border-radius: 50%;\n    padding: 10px;\n    //子绝父相,使一个div悬挂在另一个div上中间\n    position: absolute;\n    left: 50%;\n    top: 0;\n    transform: translate(-50%, -50%);\n\n    border: 1px solid #eee;\n    box-shadow: 0px 0px 10px #ddd;\n\n    img {\n        height: 100%;\n        width: 100%;\n        border-radius: 50%;\n        background: #eeeeee;\n    }\n}\n\n.loginForm {\n    margin-top: 100px;\n}\n.el-form-item {\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 15px; /* 增加表单项之间的间距，避免拥挤 */\n}\n//角色单选\n.role {\n    margin-left: 90px;\n    margin-right: 90px;\n    margin-bottom: 15px; /* 增加间距 */\n}\n//按钮\n.btns {\n    display: flex;\n    justify-content: flex-end;\n    height: 25px;\n}\n</style>\n"]}]}