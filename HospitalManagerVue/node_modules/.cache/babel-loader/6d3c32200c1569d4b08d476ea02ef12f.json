{"remainingRequest":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\babel-loader\\lib\\index.js!G:\\医院管理系统\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\医院管理系统\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\医院管理系统\\HospitalManagerVue\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\医院管理系统\\HospitalManagerVue\\src\\views\\Login.vue","mtime":1753258169273},{"path":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001368000},{"path":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1689001370000},{"path":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001368000},{"path":"G:\\医院管理系统\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001370000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHJlcXVlc3QgZnJvbSAiQC91dGlscy9yZXF1ZXN0LmpzIjsKaW1wb3J0IHsgc2V0VG9rZW4gfSBmcm9tICJAL3V0aWxzL3N0b3JhZ2UuanMiOwppbXBvcnQgeyB0b0xvYWQgfSBmcm9tICJAL3V0aWxzL2luaXRpYWxpemUuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkxvZ2luIiwKCiAgZGF0YSgpIHsKICAgIHZhciB2YWxpZGF0ZU1vYmxpZSA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoIuivt+i+k+WFpeaJi+acuuWPtyIpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBsZXQgcmVnID0gL14xKDNbMC05XXw0WzUsN118NVswLDEsMiwzLDUsNiw3LDgsOV18NlsyLDUsNiw3XXw3WzAsMSw3LDhdfDhbMC05XXw5WzEsOCw5XSlcZHs4fSQvOwoKICAgICAgICBpZiAoIXJlZy50ZXN0KHZhbHVlKSkgewogICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLor7fovpPlhaXlkIjms5XnmoTmiYvmnLrlj7ciKSk7CiAgICAgICAgfQoKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwoKICAgIHZhciB2YWxpZGF0ZUNhcmQgPSAocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSA9PiB7CiAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLor7fovpPlhaXouqvku73or4Hlj7ciKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGV0IHJlZyA9IC8oXlxkezE1fSQpfCheXGR7MTh9JCl8KF5cZHsxN30oXGR8WHx4KSQpLzsKCiAgICAgICAgaWYgKCFyZWcudGVzdCh2YWx1ZSkpIHsKICAgICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcigi6K+36L6T5YWl5ZCI5rOV55qE6Lqr5Lu96K+B5Y+356CBIikpOwogICAgICAgIH0KCiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsKCiAgICB2YXIgdmFsaWRhdGVQYXNzID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gewogICAgICBpZiAodmFsdWUgPT09ICIiKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLor7fovpPlhaXlr4bnoIEiKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMuZmluZEZvcm0uY2hlY2tQYXNzd29yZCAhPT0gIiIpIHsKICAgICAgICAgIHRoaXMuJHJlZnMuZmluZEZvcm0udmFsaWRhdGVGaWVsZCgiY2hlY2tQYXNzd29yZCIpOwogICAgICAgIH0KCiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsKCiAgICB2YXIgdmFsaWRhdGVQYXNzMiA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgaWYgKHZhbHVlID09PSAiIikgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcigi6K+35YaN5qyh6L6T5YWl5a+G56CBIikpOwogICAgICB9IGVsc2UgaWYgKHZhbHVlICE9PSB0aGlzLmZpbmRGb3JtLm5ld1Bhc3N3b3JkKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLkuKTmrKHovpPlhaXlr4bnoIHkuI3kuIDoh7QhIikpOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH07CgogICAgcmV0dXJuIHsKICAgICAgLy/og4zmma/lm77niYcKICAgICAgYmFja2dyb3VuZERpdjogewogICAgICAgIGJhY2tncm91bmRJbWFnZTogInVybCgiICsgcmVxdWlyZSgiLi4vYXNzZXRzL2RvY3Rvci5qcGVnIikgKyAiKSIsCiAgICAgICAgYmFja2dyb3VuZFJlcGVhdDogIm5vLXJlcGVhdCIsCiAgICAgICAgYmFja2dyb3VuZFNpemU6ICIxMDAlIDEwMCUiCiAgICAgIH0sCiAgICAgIGxvZ2luRm9ybTogewogICAgICAgIGlkOiAiIiwKICAgICAgICBwYXNzd29yZDogIiIsCiAgICAgICAgY2FwdGNoYTogIiIgLy8g5paw5aKe6aqM6K+B56CB5a2X5q61CgogICAgICB9LAogICAgICBsb2dpblJ1bGVzOiB7CiAgICAgICAgaWQ6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXotKblj7fnvJblj7ciLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfSwgewogICAgICAgICAgbWluOiAzLAogICAgICAgICAgbWF4OiA1MCwKICAgICAgICAgIG1lc3NhZ2U6ICLplb/luqblnKggM+WIsCA1MCDkuKrlrZfnrKYiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgcGFzc3dvcmQ6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXlr4bnoIEiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgLy8g5paw5aKe6aqM6K+B56CB6aqM6K+B6KeE5YiZCiAgICAgICAgY2FwdGNoYTogWy8vIOaWsOWingogICAgICAgIHsKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpemqjOivgeeggSIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9LCAvLyDmlrDlop4KICAgICAgICB7CiAgICAgICAgICB2YWxpZGF0b3I6IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgICAgICAgaWYgKHZhbHVlICYmIHZhbHVlLmxlbmd0aCAhPT0gNCkgewogICAgICAgICAgICAgIC8vIOmVv+W6puS4jeespuaXtuWIt+aWsOmqjOivgeeggQogICAgICAgICAgICAgIHRoaXMucmVmcmVzaENhcHRjaGEoKTsKICAgICAgICAgICAgICB0aGlzLmxvZ2luRm9ybS5jYXB0Y2hhID0gIiI7CiAgICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLpqozor4HnoIHplb/luqbkuLo05L2N77yM5bey6Ieq5Yqo5Yi35pawIikpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGNhbGxiYWNrKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9IC8vIOaWsOWingogICAgICAgIF0gLy8g5paw5aKeCgogICAgICB9LAogICAgICByb2xlOiAi5oKj6ICFIiwKICAgICAgZmluZFJvbGU6ICLmgqPogIUiLAogICAgICAvL+aJvuWbnuWvhueggQogICAgICBmaW5kRm9ybVZpc2libGU6IGZhbHNlLAogICAgICBmaW5kRm9ybTogewogICAgICAgIGNvZGU6ICIiLAogICAgICAgIG5ld1Bhc3N3b3JkOiAiIiwKICAgICAgICBjaGVja1Bhc3N3b3JkOiAiIiwKICAgICAgICBwRW1haWw6ICIiCiAgICAgIH0sCiAgICAgIGZpbmRSdWxlczogewogICAgICAgIHBFbWFpbDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpemCrueuseWcsOWdgCIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9LCB7CiAgICAgICAgICB0eXBlOiAiZW1haWwiLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpeato+ehrueahOmCrueuseWcsOWdgCIsCiAgICAgICAgICB0cmlnZ2VyOiBbImJsdXIiLCAiY2hhbmdlIl0KICAgICAgICB9XSwKICAgICAgICBjb2RlOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAi6K+36L6T5YWl6aqM6K+B56CBIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH1dLAogICAgICAgIG5ld1Bhc3N3b3JkOiBbewogICAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XSwKICAgICAgICBjaGVja1Bhc3N3b3JkOiBbewogICAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MyLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgdG90YWxUaW1lOiA2MCwKICAgICAgY29udGVudDogIuWPkemAgemqjOivgeeggSIsCiAgICAgIGNhbkNsaWNrOiB0cnVlLAogICAgICAvL+azqOWGjAogICAgICByZWdpc3RlckZvcm1WaXNpYmxlOiBmYWxzZSwKICAgICAgcmVnaXN0ZXJGb3JtOiB7CiAgICAgICAgcEdlbmRlcjogIueUtyIKICAgICAgfSwKICAgICAgcmVnaXN0ZXJSdWxlczogewogICAgICAgIHBJZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpei0puWPtyIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9LCB7CiAgICAgICAgICB0eXBlOiAibnVtYmVyIiwKICAgICAgICAgIG1lc3NhZ2U6ICLotKblj7flv4XpobvmlbDlrZfnsbvlnosiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgcFBhc3N3b3JkOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAi6K+36L6T5YWl5a+G56CBIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogNCwKICAgICAgICAgIG1heDogNTAsCiAgICAgICAgICBtZXNzYWdlOiAi6ZW/5bqm5ZyoIDTliLAgNTAg5Liq5a2X56ymIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH1dLAogICAgICAgIHBOYW1lOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAi6K+36L6T5YWl5aeT5ZCNIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogMiwKICAgICAgICAgIG1heDogOCwKICAgICAgICAgIG1lc3NhZ2U6ICLplb/luqblnKggMuWIsCA4IOS4quWtl+espiIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XSwKICAgICAgICBwRW1haWw6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXpgq7nrrEiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfSwgewogICAgICAgICAgdHlwZTogImVtYWlsIiwKICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXmraPnoa7nmoTpgq7nrrHlnLDlnYAiLAogICAgICAgICAgdHJpZ2dlcjogWyJibHVyIiwgImNoYW5nZSJdCiAgICAgICAgfV0sCiAgICAgICAgcFBob25lOiBbewogICAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZU1vYmxpZQogICAgICAgIH1dLAogICAgICAgIHBDYXJkOiBbewogICAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZUNhcmQKICAgICAgICB9XSwKICAgICAgICBwQmlydGhkYXk6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLpgInmi6nlh7rnlJ/ml6XmnJ8iLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgLy8g5paw5aKe6aqM6K+B56CB55u45YWz5bGe5oCnCiAgICAgIGNhcHRjaGFVcmw6ICIiLAogICAgICAvLyDmlrDlop7vvJrpqozor4HnoIHlm77niYdVUkwKICAgICAgcm9sZVBhdGhzOiB7CiAgICAgICAgLy/mr4/kuKrop5LoibLmnInmnYPorr/pl67nmoTot6/lvoQKICAgICAgICAn566h55CG5ZGYJzogWycvYWRtaW4nLCAnL2FkbWluTGF5b3V0JywgJy9kb2N0b3JMaXN0JywgJy9wYXRpZW50TGlzdCcsICcvb3JkZXJMaXN0JywgJy9kcnVnTGlzdCcsICcvY2hlY2tMaXN0JywgJy9iZWRMaXN0JywgJy9hcnJhbmdlSW5kZXgnLCAnL2RhdGFFeHBvcmUnXSwKICAgICAgICAn5Yy755SfJzogWycvZG9jdG9yJywgJy9kb2N0b3JMYXlvdXQnLCAnL29yZGVyVG9kYXknLCAnL2RlYWxPcmRlcicsICcvZGVhbE9yZGVyQWdhaW4nLCAnL2RvY3Rvck9yZGVyJywgJy9pbkJlZCcsICcvZG9jdG9yQ2FyZCddLAogICAgICAgICfmgqPogIUnOiBbJy9wYXRpZW50JywgJy9wYXRpZW50TGF5b3V0JywgJy9vcmRlck9wZXJhdGUnLCAnL3NlY3Rpb25NZXNzYWdlJywgJy9teU9yZGVyJywgJy9teUJlZCcsICcvcGF0aWVudENhcmQnXQogICAgICB9CiAgICB9OwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0b0xvYWQoKTsKICAgIHRoaXMucmVmcmVzaENhcHRjaGEoKTsgLy8g6aG16Z2i5Yid5aeL5YyW5pe26LCD55So77yM6Ieq5Yqo6I635Y+W6aqM6K+B56CBCiAgfSwKCiAgbWV0aG9kczogewogICAgLy8g5paw5aKe77ya5Yi35paw6aqM6K+B56CBCiAgICByZWZyZXNoQ2FwdGNoYSgpIHsKICAgICAgLy8g5paw5aKeCiAgICAgIC8vIOagueaNruinkuiJsuiOt+WPluWvueW6lOmqjOivgeeggeaOpeWPowogICAgICBsZXQgdXJsID0gIiI7IC8vIOaWsOWingoKICAgICAgaWYgKHRoaXMucm9sZSA9PT0gIueuoeeQhuWRmCIpIHsKICAgICAgICAvLyDmlrDlop4KICAgICAgICB1cmwgPSAiYWRtaW4vZ2V0Q2FwdGNoYSI7IC8vIOaWsOWingogICAgICB9IGVsc2UgaWYgKHRoaXMucm9sZSA9PT0gIuWMu+eUnyIpIHsKICAgICAgICAvLyDmlrDlop4KICAgICAgICB1cmwgPSAiZG9jdG9yL2dldENhcHRjaGEiOyAvLyDmlrDlop4KICAgICAgfSBlbHNlIHsKICAgICAgICAvLyDmlrDlop4KICAgICAgICB1cmwgPSAicGF0aWVudC9nZXRDYXB0Y2hhIjsgLy8g5paw5aKeCiAgICAgIH0gLy8g5paw5aKeCiAgICAgIC8vIOa3u+WKoOmaj+acuuaVsOmYsuatoue8k+WtmAoKCiAgICAgIHRoaXMuY2FwdGNoYVVybCA9IHJlcXVlc3QuZGVmYXVsdHMuYmFzZVVSTCArICIvIiArIHVybCArICI/dD0iICsgTWF0aC5yYW5kb20oKTsgLy8g5paw5aKeCiAgICB9LAoKICAgIC8vIOaWsOWingogICAgLy/ngrnlh7vms6jlhoznoa7orqTmjInpkq4KICAgIHJlZ2lzdGVyQ2xpY2soZm9ybU5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgcmVxdWVzdC5nZXQoInBhdGllbnQvYWRkUGF0aWVudCIsIHsKICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgcElkOiB0aGlzLnJlZ2lzdGVyRm9ybS5wSWQsCiAgICAgICAgICAgICAgcE5hbWU6IHRoaXMucmVnaXN0ZXJGb3JtLnBOYW1lLAogICAgICAgICAgICAgIHBQYXNzd29yZDogdGhpcy5yZWdpc3RlckZvcm0ucFBhc3N3b3JkLAogICAgICAgICAgICAgIHBHZW5kZXI6IHRoaXMucmVnaXN0ZXJGb3JtLnBHZW5kZXIsCiAgICAgICAgICAgICAgcEVtYWlsOiB0aGlzLnJlZ2lzdGVyRm9ybS5wRW1haWwsCiAgICAgICAgICAgICAgcFBob25lOiB0aGlzLnJlZ2lzdGVyRm9ybS5wUGhvbmUsCiAgICAgICAgICAgICAgcENhcmQ6IHRoaXMucmVnaXN0ZXJGb3JtLnBDYXJkLAogICAgICAgICAgICAgIHBCaXJ0aGRheTogdGhpcy5yZWdpc3RlckZvcm0ucEJpcnRoZGF5CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgaWYgKHJlcy5kYXRhLnN0YXR1cyAhPT0gMjAwKSByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcigi6LSm5Y+35oiW6YKu566x5bey6KKr5Y2g55So77yBIik7CiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJGb3JtVmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuazqOWGjOaIkOWKn++8gSIpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJlcnJvciBzdWJtaXQhISIpOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAoKICAgIC8vIOeCueWHu+aJvuWbnuWvhueggeehruiupOaMiemSrgogICAgZmluZFBhc3N3b3JkKGZpbmRGb3JtKSB7CiAgICAgIHRoaXMuJHJlZnNbZmluZEZvcm1dLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIC8v5aaC5p6c5piv6YCJ5Lit5oKj6ICFCiAgICAgICAgICBpZiAodGhpcy5maW5kUm9sZSA9PT0gIuaCo+iAhSIpIHsKICAgICAgICAgICAgcmVxdWVzdC5nZXQoInBhdGllbnQvZmluZFBhc3N3b3JkIiwgewogICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgcEVtYWlsOiB0aGlzLmZpbmRGb3JtLnBFbWFpbCwKICAgICAgICAgICAgICAgIHBQYXNzd29yZDogdGhpcy5maW5kRm9ybS5uZXdQYXNzd29yZCwKICAgICAgICAgICAgICAgIGNvZGU6IHRoaXMuZmluZEZvcm0uY29kZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXMgIT09IDIwMCkgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIumqjOivgeeggemUmeivr+aIluiAheW3sui/h+acn++8ge+8ge+8gSIpOwogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5a+G56CB5L+u5pS55oiQ5Yqf77yB77yB6K+355m75b2VIik7CiAgICAgICAgICAgICAgdGhpcy5maW5kRm9ybVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IC8v5aaC5p6c5piv6YCJ5Lit566h55CG5ZGYCgoKICAgICAgICAgIGlmICh0aGlzLmZpbmRSb2xlID09PSAi566h55CG5ZGYIikgewogICAgICAgICAgICByZXF1ZXN0LmdldCgiYWRtaW4vZmluZFBhc3N3b3JkIiwgewogICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgYUVtYWlsOiB0aGlzLmZpbmRGb3JtLnBFbWFpbCwKICAgICAgICAgICAgICAgIGFQYXNzd29yZDogdGhpcy5maW5kRm9ybS5uZXdQYXNzd29yZCwKICAgICAgICAgICAgICAgIGNvZGU6IHRoaXMuZmluZEZvcm0uY29kZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXMgIT09IDIwMCkgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIumqjOivgeeggemUmeivr+aIluiAheW3sui/h+acn++8ge+8ge+8gSIpOwogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5a+G56CB5L+u5pS55oiQ5Yqf77yB77yB6K+355m75b2VIik7CiAgICAgICAgICAgICAgdGhpcy5maW5kRm9ybVZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IC8v5aaC5p6c5piv6YCJ5Lit5oKj6ICFCgoKICAgICAgICAgIGlmICh0aGlzLmZpbmRSb2xlID09PSAi5Yy755SfIikgewogICAgICAgICAgICByZXF1ZXN0LmdldCgiZG9jdG9yL2ZpbmRQYXNzd29yZCIsIHsKICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgIGRFbWFpbDogdGhpcy5maW5kRm9ybS5wRW1haWwsCiAgICAgICAgICAgICAgICBkUGFzc3dvcmQ6IHRoaXMuZmluZEZvcm0ubmV3UGFzc3dvcmQsCiAgICAgICAgICAgICAgICBjb2RlOiB0aGlzLmZpbmRGb3JtLmNvZGUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzICE9PSAyMDApIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCLpqozor4HnoIHplJnor6/miJbogIXlt7Lov4fmnJ/vvIHvvIHvvIEiKTsKICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuWvhueggeS/ruaUueaIkOWKn++8ge+8geivt+eZu+W9lSIpOwogICAgICAgICAgICAgIHRoaXMuZmluZEZvcm1WaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiZXJyb3Igc3VibWl0ISEiKTsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICAvL+eCueWHu+WPkemAgemqjOivgeeggeaMiemSrgogICAgc2VuZEVtYWlsKCkgewogICAgICAvL+WAkuiuoeaXtgogICAgICBpZiAoIXRoaXMuY2FuQ2xpY2spIHJldHVybjsgLy/mlLnliqjnmoTmmK/ov5nkuKTooYzku6PnoIEKCiAgICAgIHRoaXMuY2FuQ2xpY2sgPSBmYWxzZTsKICAgICAgdGhpcy5jb250ZW50ID0gdGhpcy50b3RhbFRpbWUgKyAic+WQjumHjeaWsOWPkemAgSI7CiAgICAgIGxldCBjbG9jayA9IHdpbmRvdy5zZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgdGhpcy50b3RhbFRpbWUtLTsKICAgICAgICB0aGlzLmNvbnRlbnQgPSB0aGlzLnRvdGFsVGltZSArICJz5ZCO6YeN5paw5Y+R6YCBIjsKCiAgICAgICAgaWYgKHRoaXMudG90YWxUaW1lIDwgMCkgewogICAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwoY2xvY2spOwogICAgICAgICAgdGhpcy5jb250ZW50ID0gIumHjeaWsOWPkemAgemqjOivgeeggSI7CiAgICAgICAgICB0aGlzLnRvdGFsVGltZSA9IDEwOwogICAgICAgICAgdGhpcy5jYW5DbGljayA9IHRydWU7IC8v6L+Z6YeM6YeN5paw5byA5ZCvCiAgICAgICAgfQogICAgICB9LCAxMDAwKTsgLy/lpoLmnpzmmK/pgInkuK3mgqPogIUKCiAgICAgIGlmICh0aGlzLmZpbmRSb2xlID09PSAi5oKj6ICFIikgewogICAgICAgIHJlcXVlc3QuZ2V0KCJwYXRpZW50L3NlbmRFbWFpbCIsIHsKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICBwRW1haWw6IHRoaXMuZmluZEZvcm0ucEVtYWlsCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgICAgY29uc29sZS5sb2codGhpcy5maW5kRm9ybS5wRW1haWwpOwogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXMgIT09IDIwMCkgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuivpemCrueuseaaguacquazqOWGjO+8geivt+WFiOazqOWGjO+8gSIpOwogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLpqozor4HnoIHlj5HpgIHmiJDlip/vvIEiKTsKICAgICAgICB9KTsKICAgICAgfSAvL+WmguaenOaYr+mAieS4reeuoeeQhuWRmAoKCiAgICAgIGlmICh0aGlzLmZpbmRSb2xlID09PSAi566h55CG5ZGYIikgewogICAgICAgIHJlcXVlc3QuZ2V0KCJhZG1pbi9zZW5kRW1haWwiLCB7CiAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgYUVtYWlsOiB0aGlzLmZpbmRGb3JtLnBFbWFpbAogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZmluZEZvcm0ucEVtYWlsKTsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzICE9PSAyMDApIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCLor6Xpgq7nrrHmmoLmnKrms6jlhozvvIHor7flhYjms6jlhozvvIEiKTsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi6aqM6K+B56CB5Y+R6YCB5oiQ5Yqf77yBIik7CiAgICAgICAgfSk7CiAgICAgIH0gLy/lpoLmnpzmmK/pgInkuK3ljLvnlJ8KCgogICAgICBpZiAodGhpcy5maW5kUm9sZSA9PT0gIuWMu+eUnyIpIHsKICAgICAgICByZXF1ZXN0LmdldCgiZG9jdG9yL3NlbmRFbWFpbCIsIHsKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICBkRW1haWw6IHRoaXMuZmluZEZvcm0ucEVtYWlsCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgICAgY29uc29sZS5sb2codGhpcy5maW5kRm9ybS5wRW1haWwpOwogICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXMgIT09IDIwMCkgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuivpemCrueuseaaguacquazqOWGjO+8geivt+WFiOazqOWGjO+8gSIpOwogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLpqozor4HnoIHlj5HpgIHmiJDlip/vvIEiKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKCiAgICAvL+aPkOS6pOihqOWNlQogICAgc3VibWl0TG9naW5Gb3JtKGZvcm1OYW1lKSB7CiAgICAgIGlmICghL15cZCskLy50ZXN0KHRoaXMubG9naW5Gb3JtLmlkKSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIueUqOaIt+WQjeacieivryIpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKHRoaXMucm9sZSA9PT0gIueuoeeQhuWRmCIpIHsKICAgICAgICAgICAgdmFyIHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTsKICAgICAgICAgICAgcGFyYW1zLmFwcGVuZCgiYUlkIiwgdGhpcy5sb2dpbkZvcm0uaWQpOwogICAgICAgICAgICBwYXJhbXMuYXBwZW5kKCJhUGFzc3dvcmQiLCB0aGlzLmxvZ2luRm9ybS5wYXNzd29yZCk7CiAgICAgICAgICAgIHBhcmFtcy5hcHBlbmQoImNhcHRjaGEiLCB0aGlzLmxvZ2luRm9ybS5jYXB0Y2hhKTsgLy8g5paw5aKe77ya5re75Yqg6aqM6K+B56CB5Y+C5pWwCgogICAgICAgICAgICByZXF1ZXN0LnBvc3QoImFkbWluL2xvZ2luIiwgcGFyYW1zKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLnN0YXR1cyAhPSAyMDApIHsKICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaENhcHRjaGEoKTsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5kYXRhLm1zZyk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBzZXRUb2tlbihyZXMuZGF0YS5kYXRhLnRva2VuKTsKICAgICAgICAgICAgICBjb25zdCB0YXJnZXRVcmwgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGFyZ2V0VXJsJyk7CgogICAgICAgICAgICAgIGlmICh0YXJnZXRVcmwpIHsKICAgICAgICAgICAgICAgIC8vIOajgOafpeebruagh+i3r+W+hOaYr+WQpuWcqOW9k+WJjeinkuiJsuWFgeiuuOeahOi3r+W+hOS4rQogICAgICAgICAgICAgICAgY29uc3QgaXNBbGxvd2VkID0gdGhpcy5yb2xlUGF0aHNbdGhpcy5yb2xlXS5zb21lKHBhdGggPT4gdGFyZ2V0VXJsLnN0YXJ0c1dpdGgocGF0aCkpOwoKICAgICAgICAgICAgICAgIGlmIChpc0FsbG93ZWQpIHsKICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2godGFyZ2V0VXJsKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIC8vIOi3s+i9rOWIsOm7mOiupOi3r+W+hAogICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh0aGlzLnJvbGUgPT09ICLnrqHnkIblkZgiID8gIi9hZG1pbkxheW91dCIgOiB0aGlzLnJvbGUgPT09ICLljLvnlJ8iID8gIi9kb2N0b3JMYXlvdXQiIDogIi9wYXRpZW50TGF5b3V0Iik7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3RhcmdldFVybCcpOyAvLyDmuIXpmaTnvJPlrZjnmoTnm67moIfot6/lvoQKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8g6Lez6L2s5Yiw6buY6K6k6Lev5b6ECiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh0aGlzLnJvbGUgPT09ICLnrqHnkIblkZgiID8gIi9hZG1pbkxheW91dCIgOiB0aGlzLnJvbGUgPT09ICLljLvnlJ8iID8gIi9kb2N0b3JMYXlvdXQiIDogIi9wYXRpZW50TGF5b3V0Iik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS5jYXRjaChlID0+IHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hDYXB0Y2hhKCk7IC8vIOaWsOWinu+8muW8guW4uOeKtuWGteS4i+WIt+aWsOmqjOivgeeggQoKICAgICAgICAgICAgICBpZiAoZS5yZXNwb25zZSA9PSB1bmRlZmluZWQgfHwgZS5yZXNwb25zZS5kYXRhID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZSwKICAgICAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlLnJlc3BvbnNlLmRhdGEsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGlmICh0aGlzLnJvbGUgPT09ICLljLvnlJ8iKSB7CiAgICAgICAgICAgIHZhciBwYXJhbXMxID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpOwogICAgICAgICAgICBwYXJhbXMxLmFwcGVuZCgiZElkIiwgdGhpcy5sb2dpbkZvcm0uaWQpOwogICAgICAgICAgICBwYXJhbXMxLmFwcGVuZCgiZFBhc3N3b3JkIiwgdGhpcy5sb2dpbkZvcm0ucGFzc3dvcmQpOwogICAgICAgICAgICBwYXJhbXMxLmFwcGVuZCgiY2FwdGNoYSIsIHRoaXMubG9naW5Gb3JtLmNhcHRjaGEpOyAvLyDmlrDlop7vvJrmt7vliqDpqozor4HnoIHlj4LmlbAKCiAgICAgICAgICAgIHJlcXVlc3QucG9zdCgiZG9jdG9yL2xvZ2luIiwgcGFyYW1zMSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXMgIT0gMjAwKSB7CiAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hDYXB0Y2hhKCk7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMuZGF0YS5tc2cpOwogICAgICAgICAgICAgIH0gLy8gMS4g55m75b2V5oiQ5Yqf77yM5YWI5L+d5a2YdG9rZW4gIAoKCiAgICAgICAgICAgICAgc2V0VG9rZW4ocmVzLmRhdGEuZGF0YS50b2tlbik7IC8vIDIuIOe0p+aOpeedgOa3u+WKoOi/meautei3s+i9rOagoemqjOmAu+i+kQoKICAgICAgICAgICAgICBjb25zdCB0YXJnZXRVcmwgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGFyZ2V0VXJsJyk7CgogICAgICAgICAgICAgIGlmICh0YXJnZXRVcmwpIHsKICAgICAgICAgICAgICAgIC8vIOajgOafpeebruagh+i3r+W+hOaYr+WQpuWcqOW9k+WJjeinkuiJsuWFgeiuuOeahOi3r+W+hOS4rQogICAgICAgICAgICAgICAgY29uc3QgaXNBbGxvd2VkID0gdGhpcy5yb2xlUGF0aHNbdGhpcy5yb2xlXS5zb21lKHBhdGggPT4gdGFyZ2V0VXJsLnN0YXJ0c1dpdGgocGF0aCkpOwoKICAgICAgICAgICAgICAgIGlmIChpc0FsbG93ZWQpIHsKICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2godGFyZ2V0VXJsKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIC8vIOi3s+i9rOWIsOm7mOiupOi3r+W+hAogICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh0aGlzLnJvbGUgPT09ICLnrqHnkIblkZgiID8gIi9hZG1pbkxheW91dCIgOiB0aGlzLnJvbGUgPT09ICLljLvnlJ8iID8gIi9kb2N0b3JMYXlvdXQiIDogIi9wYXRpZW50TGF5b3V0Iik7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3RhcmdldFVybCcpOyAvLyDmuIXpmaTnvJPlrZjnmoTnm67moIfot6/lvoQKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8g6Lez6L2s5Yiw6buY6K6k6Lev5b6ECiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh0aGlzLnJvbGUgPT09ICLnrqHnkIblkZgiID8gIi9hZG1pbkxheW91dCIgOiB0aGlzLnJvbGUgPT09ICLljLvnlJ8iID8gIi9kb2N0b3JMYXlvdXQiIDogIi9wYXRpZW50TGF5b3V0Iik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS5jYXRjaChlID0+IHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hDYXB0Y2hhKCk7IC8vIOaWsOWinu+8muW8guW4uOaDheWGteS4i+WIt+aWsOmqjOivgeeggQoKICAgICAgICAgICAgICBpZiAoZS5yZXNwb25zZSA9PSB1bmRlZmluZWQgfHwgZS5yZXNwb25zZS5kYXRhID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZSwKICAgICAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlLnJlc3BvbnNlLmRhdGEsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGlmICh0aGlzLnJvbGUgPT09ICLmgqPogIUiKSB7CiAgICAgICAgICAgIHZhciBwYXJhbXMyID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpOwogICAgICAgICAgICBwYXJhbXMyLmFwcGVuZCgicElkIiwgdGhpcy5sb2dpbkZvcm0uaWQpOwogICAgICAgICAgICBwYXJhbXMyLmFwcGVuZCgicFBhc3N3b3JkIiwgdGhpcy5sb2dpbkZvcm0ucGFzc3dvcmQpOwogICAgICAgICAgICBwYXJhbXMyLmFwcGVuZCgiY2FwdGNoYSIsIHRoaXMubG9naW5Gb3JtLmNhcHRjaGEpOyAvLyDmlrDlop7vvJrmt7vliqDpqozor4HnoIHlj4LmlbAKCiAgICAgICAgICAgIHJlcXVlc3QucG9zdCgicGF0aWVudC9sb2dpbiIsIHBhcmFtczIpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwoKICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzICE9IDIwMCkgewogICAgICAgICAgICAgICAgdGhpcy5yZWZyZXNoQ2FwdGNoYSgpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLmRhdGEubXNnKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHNldFRva2VuKHJlcy5kYXRhLmRhdGEudG9rZW4pOwogICAgICAgICAgICAgIGNvbnN0IHRhcmdldFVybCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXJnZXRVcmwnKTsKCiAgICAgICAgICAgICAgaWYgKHRhcmdldFVybCkgewogICAgICAgICAgICAgICAgLy8g5qOA5p+l55uu5qCH6Lev5b6E5piv5ZCm5Zyo5b2T5YmN6KeS6Imy5YWB6K6455qE6Lev5b6E5LitCiAgICAgICAgICAgICAgICBjb25zdCBpc0FsbG93ZWQgPSB0aGlzLnJvbGVQYXRoc1t0aGlzLnJvbGVdLnNvbWUocGF0aCA9PiB0YXJnZXRVcmwuc3RhcnRzV2l0aChwYXRoKSk7CgogICAgICAgICAgICAgICAgaWYgKGlzQWxsb3dlZCkgewogICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh0YXJnZXRVcmwpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgLy8g6Lez6L2s5Yiw6buY6K6k6Lev5b6ECiAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMucm9sZSA9PT0gIueuoeeQhuWRmCIgPyAiL2FkbWluTGF5b3V0IiA6IHRoaXMucm9sZSA9PT0gIuWMu+eUnyIgPyAiL2RvY3RvckxheW91dCIgOiAiL3BhdGllbnRMYXlvdXQiKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndGFyZ2V0VXJsJyk7IC8vIOa4hemZpOe8k+WtmOeahOebruagh+i3r+W+hAogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAvLyDot7PovazliLDpu5jorqTot6/lvoQKICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMucm9sZSA9PT0gIueuoeeQhuWRmCIgPyAiL2FkbWluTGF5b3V0IiA6IHRoaXMucm9sZSA9PT0gIuWMu+eUnyIgPyAiL2RvY3RvckxheW91dCIgOiAiL3BhdGllbnRMYXlvdXQiKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLmNhdGNoKGUgPT4gewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgIHRoaXMucmVmcmVzaENhcHRjaGEoKTsgLy8g5paw5aKe77ya5byC5bi45oOF5Ya15LiL5Yi35paw6aqM6K+B56CBCgogICAgICAgICAgICAgIGlmIChlLnJlc3BvbnNlID09IHVuZGVmaW5lZCB8fCBlLnJlc3BvbnNlLmRhdGEgPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlLAogICAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgICAgICBkdXJhdGlvbjogNTAwMAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGUucmVzcG9uc2UuZGF0YSwKICAgICAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJlcnJvciBzdWJtaXQhISIpOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"login-index\" :style=\"backgroundDiv\">\n        <div class=\"mid-index\">\n            <i\n                style=\"\n                    top: 40px;\n                    font-size: 28px;\n                    left: 20px;\n                    position: absolute;\n                \"\n                class=\"iconfont icon-r-love\"\n            >\n                登录医院管理系统\n            </i>\n            <el-form\n                :model=\"loginForm\"\n                :rules=\"loginRules\"\n                ref=\"ruleForm\"\n                class=\"loginForm\"\n            >\n                <el-form-item prop=\"id\">\n                    <!--必须绑定v-model输入框才能输入字符---->\n                    <el-input \n                        v-model=\"loginForm.id\"\n                        placeholder=\"请输入账号\"\n                    >\n                        <i\n                            slot=\"prefix\"\n                            class=\"iconfont icon-r-user1\"\n                            style=\"font-size: 22px\"\n                        ></i>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input \n                        v-model=\"loginForm.password\" \n                        show-password\n                        placeholder=\"请输入密码\"\n                    >\n                        <i\n                            slot=\"prefix\"\n                            class=\"iconfont icon-r-lock\"\n                            style=\"font-size: 22px\"\n                        ></i>\n                    </el-input>\n                </el-form-item>\n                <!-- 新增验证码输入框 -->\n                <el-form-item prop=\"captcha\">  <!-- 新增 -->\n                    <el-row :gutter=\"10\">  <!-- 新增 -->\n                        <el-col :span=\"14\">  <!-- 新增 -->\n                            <el-input \n                                v-model=\"loginForm.captcha\" \n                                placeholder=\"请输入验证码\"\n                            >  <!-- 新增 -->\n                                <i\n                                    slot=\"prefix\"\n                                    class=\"iconfont icon-r-code\"\n                                    style=\"font-size: 22px\"\n                                ></i>  <!-- 新增 -->\n                            </el-input>  <!-- 新增 -->\n                        </el-col>  <!-- 新增 -->\n                        <el-col :span=\"10\">  <!-- 新增 -->\n                            <div class=\"captcha-img\">  <!-- 新增 -->\n                                <img :src=\"captchaUrl\" @click=\"refreshCaptcha\" alt=\"验证码\" />  <!-- 新增 -->\n                            </div>  <!-- 新增 -->\n                        </el-col>  <!-- 新增 -->\n                    </el-row>  <!-- 新增 -->\n                </el-form-item>  <!-- 新增 -->\n\n                <!-- 角色单选框 -->\n                <el-form-item class=\"role\">\n                    <el-radio-group v-model=\"role\" size=\"small\" @change=\"refreshCaptcha\">\n                        <el-radio label=\"患者\"></el-radio>\n                        <el-radio label=\"医生\"></el-radio>\n                        <el-radio label=\"管理员\"></el-radio>\n                    </el-radio-group>\n                </el-form-item>\n\n                <el-form-item class=\"btns\">\n                    <el-button\n                        type=\"primary\"\n                        style=\"font-size: 18px\"\n                        @click=\"submitLoginForm('ruleForm')\"\n                    >\n                        <i\n                            class=\"iconfont icon-r-yes\"\n                            style=\"font-size: 20px\"\n                        ></i>\n                        登录</el-button\n                    >\n                    <el-button\n                        type=\"info\"\n                        style=\"font-size: 18px\"\n                        @click=\"registerFormVisible = true\"\n                    >\n                        <i\n                            class=\"iconfont icon-r-add\"\n                            style=\"font-size: 20px\"\n                        ></i>\n                        注册新账号</el-button\n                    >\n                </el-form-item>\n            </el-form>\n        </div>\n\n        <!-- 注册对话框 -->\n        <el-dialog title=\"用户注册\" :visible.sync=\"registerFormVisible\">\n            <el-form\n                class=\"findPassword\"\n                :model=\"registerForm\"\n                :rules=\"registerRules\"\n                ref=\"registerForm\"\n            >\n                <el-form-item label=\"账号\" label-width=\"80px\" prop=\"pId\">\n                    <el-input v-model.number=\"registerForm.pId\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"性别\" label-width=\"80px\">\n                    <el-radio v-model=\"registerForm.pGender\" label=\"男\"\n                        >男</el-radio\n                    >\n                    <el-radio v-model=\"registerForm.pGender\" label=\"女\"\n                        >女</el-radio\n                    >\n                </el-form-item>\n                <el-form-item label=\"密码\" label-width=\"80px\" prop=\"pPassword\">\n                    <el-input v-model=\"registerForm.pPassword\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"姓名\" label-width=\"80px\" prop=\"pName\">\n                    <el-input v-model=\"registerForm.pName\"></el-input>\n                </el-form-item>\n                <el-form-item\n                    label=\"出生日期\"\n                    label-width=\"80px\"\n                    prop=\"pBirthday\"\n                >\n                    <el-date-picker\n                        v-model=\"registerForm.pBirthday\"\n                        type=\"date\"\n                        placeholder=\"选择日期\"\n                        value-format=\"yyyy-MM-dd\"\n                    >\n                    </el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"手机号\" label-width=\"80px\" prop=\"pPhone\">\n                    <el-input v-model=\"registerForm.pPhone\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" label-width=\"80px\" prop=\"pEmail\">\n                    <el-input v-model=\"registerForm.pEmail\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"身份证号\" label-width=\"80px\" prop=\"pCard\">\n                    <el-input v-model=\"registerForm.pCard\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button\n                    @click=\"registerFormVisible = false\"\n                    style=\"font-size: 18px\"\n                    ><i\n                        class=\"iconfont icon-r-left\"\n                        style=\"font-size: 20px\"\n                    ></i>\n                    取 消</el-button\n                >\n                <el-button\n                    type=\"primary\"\n                    @click=\"registerClick('registerForm')\"\n                    style=\"font-size: 18px\"\n                    ><i class=\"iconfont icon-r-yes\" style=\"font-size: 20px\"></i>\n                    确 定</el-button\n                >\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nimport { setToken } from \"@/utils/storage.js\";\nimport { toLoad } from \"@/utils/initialize.js\";\n\nexport default {\n    name: \"Login\",\n    data() {\n        var validateMoblie = (rule, value, callback) => {\n            if (value === undefined) {\n                callback(new Error(\"请输入手机号\"));\n            } else {\n                let reg =\n                    /^1(3[0-9]|4[5,7]|5[0,1,2,3,5,6,7,8,9]|6[2,5,6,7]|7[0,1,7,8]|8[0-9]|9[1,8,9])\\d{8}$/;\n                if (!reg.test(value)) {\n                    callback(new Error(\"请输入合法的手机号\"));\n                }\n                callback();\n            }\n        };\n        var validateCard = (rule, value, callback) => {\n            if (value === undefined) {\n                callback(new Error(\"请输入身份证号\"));\n            } else {\n                let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n                if (!reg.test(value)) {\n                    callback(new Error(\"请输入合法的身份证号码\"));\n                }\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请输入密码\"));\n            } else {\n                if (this.findForm.checkPassword !== \"\") {\n                    this.$refs.findForm.validateField(\"checkPassword\");\n                }\n                callback();\n            }\n        };\n        var validatePass2 = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请再次输入密码\"));\n            } else if (value !== this.findForm.newPassword) {\n                callback(new Error(\"两次输入密码不一致!\"));\n            } else {\n                callback();\n            }\n        };\n        return {\n            //背景图片\n            backgroundDiv: {\n                backgroundImage:\n                    \"url(\" + require(\"../assets/doctor.jpeg\") + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"100% 100%\",\n            },\n            loginForm: {\n                id: \"\",\n                password: \"\",\n                captcha: \"\",  // 新增验证码字段\n            },\n            loginRules: {\n                id: [\n                    {\n                        required: true,\n                        message: \"请输入账号编号\",\n                        trigger: \"blur\",\n                    },\n                    {\n                        min: 3,\n                        max: 50,\n                        message: \"长度在 3到 50 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                password: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                ],\n                // 新增验证码验证规则\n                captcha: [  // 新增\n                    { required: true, message: \"请输入验证码\", trigger: \"blur\" },  // 新增\n                    { validator: (rule, value, callback) => {\n                        if (value && value.length !== 4) {\n                            // 长度不符时刷新验证码\n                            this.refreshCaptcha();\n                            this.loginForm.captcha = \"\";\n                            callback(new Error(\"验证码长度为4位，已自动刷新\"));\n                        } else {\n                            callback();\n                        }\n                    }, trigger: \"blur\" }  // 新增\n                ],  // 新增\n            },\n            role: \"患者\",\n            findRole: \"患者\",\n            //找回密码\n            findFormVisible: false,\n            findForm: {\n                code: \"\",\n                newPassword: \"\",\n                checkPassword: \"\",\n                pEmail: \"\",\n            },\n\n            findRules: {\n                pEmail: [\n                    {\n                        required: true,\n                        message: \"请输入邮箱地址\",\n                        trigger: \"blur\",\n                    },\n                    {\n                        type: \"email\",\n                        message: \"请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"],\n                    },\n                ],\n                code: [\n                    {\n                        required: true,\n                        message: \"请输入验证码\",\n                        trigger: \"blur\",\n                    },\n                ],\n                newPassword: [{ validator: validatePass, trigger: \"blur\" }],\n                checkPassword: [{ validator: validatePass2, trigger: \"blur\" }],\n            },\n            totalTime: 60,\n            content: \"发送验证码\",\n            canClick: true,\n            //注册\n            registerFormVisible: false,\n            registerForm: {\n                pGender: \"男\",\n            },\n            registerRules: {\n                pId: [\n                    { required: true, message: \"请输入账号\", trigger: \"blur\" },\n                    {\n                        type: \"number\",\n                        message: \"账号必须数字类型\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pPassword: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                    {\n                        min: 4,\n                        max: 50,\n                        message: \"长度在 4到 50 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pName: [\n                    { required: true, message: \"请输入姓名\", trigger: \"blur\" },\n                    {\n                        min: 2,\n                        max: 8,\n                        message: \"长度在 2到 8 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pEmail: [\n                    { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\n                    {\n                        type: \"email\",\n                        message: \"请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"],\n                    },\n                ],\n                pPhone: [{ validator: validateMoblie }],\n                pCard: [{ validator: validateCard }],\n                pBirthday: [\n                    {\n                        required: true,\n                        message: \"选择出生日期\",\n                        trigger: \"blur\",\n                    },\n                ],\n            },\n            // 新增验证码相关属性\n            captchaUrl: \"\",  // 新增：验证码图片URL\n            rolePaths: {     //每个角色有权访问的路径\n            '管理员': ['/admin', '/adminLayout', '/doctorList', '/patientList', '/orderList', '/drugList', '/checkList', '/bedList', '/arrangeIndex', '/dataExpore'],\n            '医生': ['/doctor', '/doctorLayout', '/orderToday', '/dealOrder', '/dealOrderAgain', '/doctorOrder', '/inBed', '/doctorCard'],\n            '患者': ['/patient', '/patientLayout', '/orderOperate', '/sectionMessage', '/myOrder', '/myBed', '/patientCard']\n            }\n        };\n    },\n    mounted() {\n        toLoad();\n        this.refreshCaptcha();  // 页面初始化时调用，自动获取验证码\n    },\n    methods: {\n        // 新增：刷新验证码\n        refreshCaptcha() {  // 新增\n            // 根据角色获取对应验证码接口\n            let url = \"\";  // 新增\n            if (this.role === \"管理员\") {  // 新增\n                url = \"admin/getCaptcha\";  // 新增\n            } else if (this.role === \"医生\") {  // 新增\n                url = \"doctor/getCaptcha\";  // 新增\n            } else {  // 新增\n                url = \"patient/getCaptcha\";  // 新增\n            }  // 新增\n            // 添加随机数防止缓存\n            this.captchaUrl = request.defaults.baseURL + \"/\" + url + \"?t=\" + Math.random();  // 新增\n        },  // 新增\n        //点击注册确认按钮\n        registerClick(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    request\n                        .get(\"patient/addPatient\", {\n                            params: {\n                                pId: this.registerForm.pId,\n                                pName: this.registerForm.pName,\n                                pPassword: this.registerForm.pPassword,\n                                pGender: this.registerForm.pGender,\n                                pEmail: this.registerForm.pEmail,\n                                pPhone: this.registerForm.pPhone,\n                                pCard: this.registerForm.pCard,\n                                pBirthday: this.registerForm.pBirthday,\n                            },\n                        })\n                        .then((res) => {\n                            if (res.data.status !== 200)\n                                return this.$message.error(\n                                    \"账号或邮箱已被占用！\"\n                                );\n                            this.registerFormVisible = false;\n                            this.$message.success(\"注册成功！\");\n                            console.log(res);\n                        });\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        // 点击找回密码确认按钮\n        findPassword(findForm) {\n            this.$refs[findForm].validate((valid) => {\n                if (valid) {\n                    //如果是选中患者\n                    if (this.findRole === \"患者\") {\n                        request\n                            .get(\"patient/findPassword\", {\n                                params: {\n                                    pEmail: this.findForm.pEmail,\n                                    pPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                    //如果是选中管理员\n                    if (this.findRole === \"管理员\") {\n                        request\n                            .get(\"admin/findPassword\", {\n                                params: {\n                                    aEmail: this.findForm.pEmail,\n                                    aPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                    //如果是选中患者\n                    if (this.findRole === \"医生\") {\n                        request\n                            .get(\"doctor/findPassword\", {\n                                params: {\n                                    dEmail: this.findForm.pEmail,\n                                    dPassword: this.findForm.newPassword,\n                                    code: this.findForm.code,\n                                },\n                            })\n                            .then((res) => {\n                                if (res.data.status !== 200)\n                                    return this.$message.error(\n                                        \"验证码错误或者已过期！！！\"\n                                    );\n                                this.$message.success(\"密码修改成功！！请登录\");\n                                this.findFormVisible = false;\n                            });\n                    }\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        //点击发送验证码按钮\n        sendEmail() {\n            //倒计时\n            if (!this.canClick) return; //改动的是这两行代码\n            this.canClick = false;\n            this.content = this.totalTime + \"s后重新发送\";\n            let clock = window.setInterval(() => {\n                this.totalTime--;\n                this.content = this.totalTime + \"s后重新发送\";\n                if (this.totalTime < 0) {\n                    window.clearInterval(clock);\n                    this.content = \"重新发送验证码\";\n                    this.totalTime = 10;\n                    this.canClick = true; //这里重新开启\n                }\n            }, 1000);\n\n            //如果是选中患者\n            if (this.findRole === \"患者\") {\n                request\n                    .get(\"patient/sendEmail\", {\n                        params: {\n                            pEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n            //如果是选中管理员\n            if (this.findRole === \"管理员\") {\n                request\n                    .get(\"admin/sendEmail\", {\n                        params: {\n                            aEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n            //如果是选中医生\n            if (this.findRole === \"医生\") {\n                request\n                    .get(\"doctor/sendEmail\", {\n                        params: {\n                            dEmail: this.findForm.pEmail,\n                        },\n                    })\n                    .then((res) => {\n                        console.log(this.findForm.pEmail);\n                        console.log(res);\n                        if (res.data.status !== 200)\n                            return this.$message.error(\n                                \"该邮箱暂未注册！请先注册！\"\n                            );\n                        this.$message.success(\"验证码发送成功！\");\n                    });\n            }\n        },\n        //提交表单\n        submitLoginForm(formName) {\n            if (!/^\\d+$/.test(this.loginForm.id)) {\n                this.$message.error(\"用户名有误\");\n                return;\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    if (this.role === \"管理员\") {\n                        var params = new URLSearchParams();\n                        params.append(\"aId\", this.loginForm.id);\n                        params.append(\"aPassword\", this.loginForm.password);\n                        params.append(\"captcha\", this.loginForm.captcha); // 新增：添加验证码参数\n\n                        request\n                            .post(\"admin/login\", params)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200){\n                                    this.refreshCaptcha();\n                                    return this.$message.error(res.data.msg);\n                                }\n                                setToken(res.data.data.token);\n                                const targetUrl = localStorage.getItem('targetUrl');\n                                if (targetUrl) {\n                                    // 检查目标路径是否在当前角色允许的路径中\n                                    const isAllowed = this.rolePaths[this.role].some(path => targetUrl.startsWith(path));\n                                    if (isAllowed) {\n                                        this.$router.push(targetUrl);\n                                    } else {\n                                        // 跳转到默认路径\n                                        this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                    }\n                                    localStorage.removeItem('targetUrl'); // 清除缓存的目标路径\n                                } else {\n                                    // 跳转到默认路径\n                                    this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                }\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                this.refreshCaptcha(); // 新增：异常状况下刷新验证码\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                    if (this.role === \"医生\") {\n                        var params1 = new URLSearchParams();\n                        params1.append(\"dId\", this.loginForm.id);\n                        params1.append(\"dPassword\", this.loginForm.password);\n                        params1.append(\"captcha\", this.loginForm.captcha); // 新增：添加验证码参数\n\n                        request\n                            .post(\"doctor/login\", params1)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200){\n                                    this.refreshCaptcha();\n                                    return this.$message.error(res.data.msg);   \n                                }        \n                                // 1. 登录成功，先保存token  \n                                setToken(res.data.data.token);\n\n                                // 2. 紧接着添加这段跳转校验逻辑\n                                const targetUrl = localStorage.getItem('targetUrl');\n                                if (targetUrl) {\n                                    // 检查目标路径是否在当前角色允许的路径中\n                                    const isAllowed = this.rolePaths[this.role].some(path => targetUrl.startsWith(path));\n                                    if (isAllowed) {\n                                        this.$router.push(targetUrl);\n                                    } else {\n                                        // 跳转到默认路径\n                                        this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                    }\n                                    localStorage.removeItem('targetUrl'); // 清除缓存的目标路径\n                                } else {\n                                    // 跳转到默认路径\n                                    this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                }\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                this.refreshCaptcha(); // 新增：异常情况下刷新验证码\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                    if (this.role === \"患者\") {\n                        var params2 = new URLSearchParams();\n                        params2.append(\"pId\", this.loginForm.id);\n                        params2.append(\"pPassword\", this.loginForm.password);\n                        params2.append(\"captcha\", this.loginForm.captcha); // 新增：添加验证码参数\n\n                        request\n                            .post(\"patient/login\", params2)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200){\n                                    this.refreshCaptcha();\n                                    return this.$message.error(res.data.msg);\n                                }   \n                                setToken(res.data.data.token);\n                                const targetUrl = localStorage.getItem('targetUrl');\n                                if (targetUrl) {\n                                    // 检查目标路径是否在当前角色允许的路径中\n                                    const isAllowed = this.rolePaths[this.role].some(path => targetUrl.startsWith(path));\n                                    if (isAllowed) {\n                                        this.$router.push(targetUrl);\n                                    } else {\n                                        // 跳转到默认路径\n                                        this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                    }\n                                    localStorage.removeItem('targetUrl'); // 清除缓存的目标路径\n                                } else {\n                                    // 跳转到默认路径\n                                    this.$router.push(this.role === \"管理员\" ? \"/adminLayout\" : this.role === \"医生\" ? \"/doctorLayout\" : \"/patientLayout\");\n                                }\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                this.refreshCaptcha(); // 新增：异常情况下刷新验证码\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n    }\n};\n</script>\n\n<style lang=\"scss\">\n// 新增验证码图片样式\n.captcha-img {  /* 新增 */\n    width: 100%;  /* 新增 */\n    height: 40px;  /* 新增 */\n    cursor: pointer;  /* 新增 */\n    overflow: hidden;  /* 新增 */\n    img {  /* 新增 */\n        width: 100%;  /* 新增 */\n        height: 100%;  /* 新增 */\n        object-fit: cover;  /* 新增 */\n    }  /* 新增 */\n}  /* 新增 */\n.codeInput {\n    width: 70%;\n    margin-right: 10px;\n}\n.findPassword {\n    margin-top: 0px;\n}\n.login-index {\n    background: #2b4b6b;\n    height: 100vh;\n    position: relative;\n}\n.mid-index {\n    opacity: 0.9;\n    width: 450px;\n    height: 390px;\n    background: white;\n    //绝对定位，相对于最左上角来说\n    position: absolute;\n    left: 70%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    overflow: hidden;\n}\n.logo-index {\n    background: white;\n    height: 130px;\n    width: 130px;\n    border-radius: 50%;\n    padding: 10px;\n    //子绝父相,使一个div悬挂在另一个div上中间\n    position: absolute;\n    left: 50%;\n    top: 0;\n    transform: translate(-50%, -50%);\n\n    border: 1px solid #eee;\n    box-shadow: 0px 0px 10px #ddd;\n\n    img {\n        height: 100%;\n        width: 100%;\n        border-radius: 50%;\n        background: #eeeeee;\n    }\n}\n\n.loginForm {\n    margin-top: 100px;\n}\n.el-form-item {\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 15px; /* 增加表单项之间的间距，避免拥挤 */\n}\n//角色单选\n.role {\n    margin-left: 90px;\n    margin-right: 90px;\n    margin-bottom: 15px; /* 增加间距 */\n}\n//按钮\n.btns {\n    display: flex;\n    justify-content: flex-end;\n    height: 25px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}